"use strict";(self.webpackChunkosbuild_website_ng=self.webpackChunkosbuild_website_ng||[]).push([[4523],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>g});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),u=p(n),m=i,g=u["".concat(s,".").concat(m)]||u[m]||d[m]||a;return n?r.createElement(g,o(o({ref:t},c),{},{components:n})):r.createElement(g,o({ref:t},c))}));function g(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:i,o[1]=l;for(var p=2;p<a;p++)o[p]=n[p];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},6170:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>l,toc:()=>p});var r=n(7462),i=(n(7294),n(3905));const a={},o="Uploading a container image to a registry",l={unversionedId:"image-builder-on-premises/uploading-to-registry",id:"image-builder-on-premises/uploading-to-registry",title:"Uploading a container image to a registry",description:"osbuild-composer can upload a container image, like the RHEL for",source:"@site/docs/image-builder-on-premises/uploading-to-registry.md",sourceDirName:"image-builder-on-premises",slug:"/image-builder-on-premises/uploading-to-registry",permalink:"/osbuild-website-ng/docs/image-builder-on-premises/uploading-to-registry",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/image-builder-on-premises/uploading-to-registry.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Uploading an image to OCI",permalink:"/osbuild-website-ng/docs/image-builder-on-premises/uploading-to-oci"},next:{title:"User guide",permalink:"/osbuild-website-ng/docs/image-builder-on-premises/user-guide"}},s={},p=[],c={toc:p},u="wrapper";function d(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"uploading-a-container-image-to-a-registry"},"Uploading a container image to a registry"),(0,i.kt)("p",null,(0,i.kt)("inlineCode",{parentName:"p"},"osbuild-composer")," can upload a container image, like the RHEL for\nedge container, to a registry directly after it has been built."),(0,i.kt)("p",null,"In order to do so, the container reference and an upload configuration\nfile need to be specified when building a container artifact:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"$ sudo composer-cli compose start BLUEPRINT container REFERENCE CONFIG.toml\n")),(0,i.kt)("p",null,"where ",(0,i.kt)("inlineCode",{parentName:"p"},"BLUEPRINT")," is the name for the container and ",(0,i.kt)("inlineCode",{parentName:"p"},"REFERENCE")," the\nreference to the container image, like ",(0,i.kt)("inlineCode",{parentName:"p"},"registry.example.com/image:tag"),".\nIf ",(0,i.kt)("inlineCode",{parentName:"p"},":tag")," is omitted, ",(0,i.kt)("inlineCode",{parentName:"p"},":latest")," is the default.  The ",(0,i.kt)("inlineCode",{parentName:"p"},"CONFIG.toml")," file\nmust include ",(0,i.kt)("inlineCode",{parentName:"p"},'provider = "container"'),". Other values are optional."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-Toml"},'provider = "container" # required\n\n[settings]\ntls_verify = false     # optional, TLS verification, default: true\nusername = "USERNAME"  # optional, username to use\npassword = "PASSWORD"  # optional, password to use\n')),(0,i.kt)("p",null,"Instead of specifying ",(0,i.kt)("inlineCode",{parentName:"p"},"username")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"password")," directly, a central\n",(0,i.kt)("inlineCode",{parentName:"p"},"containers-auth.json(5)")," file can be used, see\n",(0,i.kt)("a",{parentName:"p",href:"/osbuild-website-ng/docs/image-builder-on-premises/container-auth"},"Container registry credentials"),"."))}d.isMDXComponent=!0}}]);