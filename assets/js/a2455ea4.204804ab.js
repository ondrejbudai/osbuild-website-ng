"use strict";(self.webpackChunkosbuild_website_ng=self.webpackChunkosbuild_website_ng||[]).push([[837],{3905:(e,t,i)=>{i.d(t,{Zo:()=>s,kt:()=>g});var n=i(7294);function a(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,n)}return i}function l(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){a(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function r(e,t){if(null==e)return{};var i,n,a=function(e,t){if(null==e)return{};var i,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||(a[i]=e[i]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)i=o[n],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(a[i]=e[i])}return a}var p=n.createContext({}),u=function(e){var t=n.useContext(p),i=t;return e&&(i="function"==typeof e?e(t):l(l({},t),e)),i},s=function(e){var t=u(e.components);return n.createElement(p.Provider,{value:t},e.children)},d="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var i=e.components,a=e.mdxType,o=e.originalType,p=e.parentName,s=r(e,["components","mdxType","originalType","parentName"]),d=u(i),m=a,g=d["".concat(p,".").concat(m)]||d[m]||c[m]||o;return i?n.createElement(g,l(l({ref:t},s),{},{components:i})):n.createElement(g,l({ref:t},s))}));function g(e,t){var i=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=i.length,l=new Array(o);l[0]=m;var r={};for(var p in t)hasOwnProperty.call(t,p)&&(r[p]=t[p]);r.originalType=e,r[d]="string"==typeof e?e:a,l[1]=r;for(var u=2;u<o;u++)l[u]=i[u];return n.createElement.apply(null,l)}return n.createElement.apply(null,i)}m.displayName="MDXCreateElement"},528:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>p,contentTitle:()=>l,default:()=>c,frontMatter:()=>o,metadata:()=>r,toc:()=>u});var n=i(7462),a=(i(7294),i(3905));const o={},l="Image Builder Koji integration",r={unversionedId:"image-builder-service/image-builder-koji",id:"image-builder-service/image-builder-koji",title:"Image Builder Koji integration",description:"This document describes how various instances of the Koji build system can and do integrate with the Image Builder service.",source:"@site/docs/image-builder-service/image-builder-koji.md",sourceDirName:"image-builder-service",slug:"/image-builder-service/image-builder-koji",permalink:"/osbuild-website-ng/docs/image-builder-service/image-builder-koji",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/image-builder-service/image-builder-koji.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Image Builder CRC API Architecture Document",permalink:"/osbuild-website-ng/docs/image-builder-service/image-builder-crc"},next:{title:"Image Builder Workers Architecture Document",permalink:"/osbuild-website-ng/docs/image-builder-service/image-builder-workers"}},p={},u=[{value:"Architecture",id:"architecture",level:2},{value:"Technology Stack",id:"technology-stack",level:2},{value:"Building images via Koji integration",id:"building-images-via-koji-integration",level:2},{value:"Cloud upload",id:"cloud-upload",level:3},{value:"Prerequisites",id:"prerequisites",level:4},{value:"Details",id:"details",level:4},{value:"Cloud upload via <code>koji-cli</code>",id:"cloud-upload-via-koji-cli",level:4},{value:"Cloud upload via <code>Pungi</code>",id:"cloud-upload-via-pungi",level:4}],s={toc:u},d="wrapper";function c(e){let{components:t,...i}=e;return(0,a.kt)(d,(0,n.Z)({},s,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"image-builder-koji-integration"},"Image Builder Koji integration"),(0,a.kt)("p",null,"This document describes how various instances of the ",(0,a.kt)("a",{parentName:"p",href:"https://koji.build/"},"Koji")," build system can and do integrate with the Image Builder service."),(0,a.kt)("h2",{id:"architecture"},"Architecture"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"osbuild-composer")," can integrate with a ",(0,a.kt)("inlineCode",{parentName:"p"},"Koji")," instance as an external Content Generator using the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/osbuild/koji-osbuild"},"koji-osbuild")," plugin. The overview of the integration is described in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/osbuild/koji-osbuild/blob/main/README.md"},"koji-osbuild project README"),"."),(0,a.kt)("p",null,"In short, a ",(0,a.kt)("inlineCode",{parentName:"p"},"Koji")," instance integrates directly with ",(0,a.kt)("inlineCode",{parentName:"p"},"osbuild-composer")," API, usually as a separate tenant with a dedicated set of workers."),(0,a.kt)("h2",{id:"technology-stack"},"Technology Stack"),(0,a.kt)("p",null,"The ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/osbuild/koji-osbuild"},"koji-osbuild")," plugin is implemented in Python, and the list of dependencies can be found in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/osbuild/koji-osbuild/blob/main/koji-osbuild.spec"},"SPEC file"),"."),(0,a.kt)("h2",{id:"building-images-via-koji-integration"},"Building images via Koji integration"),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"koji-osbuild")," plugin allows one to submit image builds via the Koji Hub API using the ",(0,a.kt)("inlineCode",{parentName:"p"},"osbuildImage")," task. The accepted arguments schema of the ",(0,a.kt)("inlineCode",{parentName:"p"},"osbuildImage")," task is described ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/osbuild/koji-osbuild/blob/cc3e621754d99b3f2a4fcb85bb207bf76a0970ea/plugins/hub/osbuild.py#L12-L225"},"in the plugin implementation"),". The ",(0,a.kt)("inlineCode",{parentName:"p"},"koji-osbuild")," plugin processes the request and submits a new compose request using the ",(0,a.kt)("inlineCode",{parentName:"p"},"osbuild-composer")," Cloud API. The plugin always sets the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/osbuild/osbuild-composer/blob/434362e81ed996e6353360c3311090ae1cbe73a6/internal/cloudapi/v2/openapi.v2.yml#L736-L737"},(0,a.kt)("inlineCode",{parentName:"a"},"koji")," property")," in the compose request, signaling to ",(0,a.kt)("inlineCode",{parentName:"p"},"osbuild-composer")," that the request is coming from a ",(0,a.kt)("inlineCode",{parentName:"p"},"Koji")," plugin."),(0,a.kt)("p",null,"Images built as part of a compose requests submitted via the ",(0,a.kt)("inlineCode",{parentName:"p"},"Koji")," plugin are always implicitly uploaded to the respective ",(0,a.kt)("inlineCode",{parentName:"p"},"Koji")," instance. Since ",(0,a.kt)("strong",{parentName:"p"},"version 10")," of the ",(0,a.kt)("inlineCode",{parentName:"p"},"koji-osbuild")," plugin, images can be uploaded directly to the appropriate cloud environment, in addition to being uploaded to ",(0,a.kt)("inlineCode",{parentName:"p"},"Koji"),". More details are below in the ",(0,a.kt)("a",{parentName:"p",href:"#cloud-upload"},"Cloud upload")," section."),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"koji-osbuild")," plugin also supports specifying all image customizations supported by the ",(0,a.kt)("inlineCode",{parentName:"p"},"osbuild-composer")," Cloud API."),(0,a.kt)("p",null,"There are currently two easy ways how to trigger the ",(0,a.kt)("inlineCode",{parentName:"p"},"osbuildImage")," tasks in Koji:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"koji-cli")," - the command line client for interacting with ",(0,a.kt)("inlineCode",{parentName:"li"},"Koji"),". The prerequisite is to install the ",(0,a.kt)("inlineCode",{parentName:"li"},"koji-osbuild-cli")," plugin. For more information, run ",(0,a.kt)("inlineCode",{parentName:"li"},"koji osbuild-image --help"),"."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("a",{parentName:"li",href:"https://pagure.io/pungi"},"Pungi")," - a distribution compose tool. ",(0,a.kt)("inlineCode",{parentName:"li"},"Pungi")," interacts directly with the ",(0,a.kt)("inlineCode",{parentName:"li"},"Koji")," Hub API and is able to submit ",(0,a.kt)("inlineCode",{parentName:"li"},"osbuildImage")," tasks as part of a distribution compose. The details of how to configure ",(0,a.kt)("inlineCode",{parentName:"li"},"Pungi")," to trigger image builds are described in the ",(0,a.kt)("a",{parentName:"li",href:"https://docs.pagure.org/pungi/configuration.html#osbuild-composer-for-building-images"},"project documentation"),".")),(0,a.kt)("h3",{id:"cloud-upload"},"Cloud upload"),(0,a.kt)("h4",{id:"prerequisites"},"Prerequisites"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"koji-osbuild")," version >= 10"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"osbuild-composer")," version >= 58")),(0,a.kt)("h4",{id:"details"},"Details"),(0,a.kt)("p",null,"Images built via the ",(0,a.kt)("inlineCode",{parentName:"p"},"Koji")," integration can be automatically uploaded to the appropriate cloud environment, in addition to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Koji")," instance. In order for this to happen, one must provide ",(0,a.kt)("em",{parentName:"p"},"upload_options")," when using the ",(0,a.kt)("inlineCode",{parentName:"p"},"osbuildImage")," task and the integrated ",(0,a.kt)("inlineCode",{parentName:"p"},"osbuild-composer")," instance must be configured appropriately to be able to upload to the respective cloud environments."),(0,a.kt)("p",null,"Currently supported ",(0,a.kt)("em",{parentName:"p"},"upload_options")," are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"AWS EC2"),(0,a.kt)("li",{parentName:"ul"},"AWS S3"),(0,a.kt)("li",{parentName:"ul"},"Azure (as an image)"),(0,a.kt)("li",{parentName:"ul"},"GCP"),(0,a.kt)("li",{parentName:"ul"},"Container registry")),(0,a.kt)("p",null,"Please note, that each image type can be uploaded only to its respective cloud target, represented by ",(0,a.kt)("em",{parentName:"p"},"upload_options")," (e.g. the ",(0,a.kt)("inlineCode",{parentName:"p"},"ami")," image can be uploaded only to ",(0,a.kt)("inlineCode",{parentName:"p"},"AWS EC2"),", ",(0,a.kt)("inlineCode",{parentName:"p"},"gce")," image can be uploaded only to ",(0,a.kt)("inlineCode",{parentName:"p"},"GCP"),", etc.)."),(0,a.kt)("p",null,"The allowed ",(0,a.kt)("em",{parentName:"p"},"upload_options")," schema is defined in the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/osbuild/koji-osbuild/blob/cc3e621754d99b3f2a4fcb85bb207bf76a0970ea/plugins/hub/osbuild.py#L110-L118"},(0,a.kt)("inlineCode",{parentName:"a"},"koji-osbuild")," Hub plugin")," and currently matches the ",(0,a.kt)("a",{parentName:"p",href:"https://github.com/osbuild/osbuild-composer/blob/434362e81ed996e6353360c3311090ae1cbe73a6/internal/cloudapi/v2/openapi.v2.yml#L809-L815"},(0,a.kt)("inlineCode",{parentName:"a"},"osbuild-composer")," Cloud API ",(0,a.kt)("inlineCode",{parentName:"a"},"UploadOptions")),"."),(0,a.kt)("p",null,"If the compose request contains multiple image requests (meaning that multiple images will be built), the provided ",(0,a.kt)("em",{parentName:"p"},"upload_options")," will be used as is for all images (with all its consequences)."),(0,a.kt)("p",null,"All the necessary data to locate the image in the cloud is attached by the ",(0,a.kt)("inlineCode",{parentName:"p"},"koji-osbuild")," plugin to the image build task in ",(0,a.kt)("inlineCode",{parentName:"p"},"Koji")," as ",(0,a.kt)("inlineCode",{parentName:"p"},"compose-status.json")," file. Below is an example of such file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "image_statuses": [\n        {\n            "status": "success",\n            "upload_status": {\n                "options": {\n                    "ami": "ami-02e34403c421dfc17",\n                    "region": "us-east-1"\n                },\n                "status": "success",\n                "type": "aws"\n            }\n        }\n    ],\n    "koji_build_id": 1,\n    "koji_task_id": null,\n    "status": "success"\n}\n')),(0,a.kt)("h4",{id:"cloud-upload-via-koji-cli"},"Cloud upload via ",(0,a.kt)("inlineCode",{parentName:"h4"},"koji-cli")),(0,a.kt)("p",null,"In order to upload images to the cloud when using ",(0,a.kt)("inlineCode",{parentName:"p"},"koji-cli"),", one must first create a JSON file with the appropriate ",(0,a.kt)("em",{parentName:"p"},"upload_options"),"."),(0,a.kt)("p",null,"Example ",(0,a.kt)("inlineCode",{parentName:"p"},"gcp_upload_options.json"),":"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-json"},'{\n    "region": "eu",\n    "bucket": "my-bucket",\n    "share_with_accounts": ["alice@example.org"]\n}\n')),(0,a.kt)("p",null,"Then add the ",(0,a.kt)("inlineCode",{parentName:"p"},"--upload-options=gcp_upload_options.json")," argument to the command line when calling ",(0,a.kt)("inlineCode",{parentName:"p"},"koji")," CLI."),(0,a.kt)("h4",{id:"cloud-upload-via-pungi"},"Cloud upload via ",(0,a.kt)("inlineCode",{parentName:"h4"},"Pungi")),(0,a.kt)("p",null,"In order to upload images to the cloud, when using ",(0,a.kt)("inlineCode",{parentName:"p"},"Pungi")," to trigger image builds, one must specify the ",(0,a.kt)("inlineCode",{parentName:"p"},"upload_options")," option in the configuration dictionary as described in the ",(0,a.kt)("a",{parentName:"p",href:"https://docs.pagure.org/pungi/configuration.html#osbuild-composer-for-building-images"},"project documentation"),"."),(0,a.kt)("p",null,"Please note that the support for cloud upload has been merged to the ",(0,a.kt)("inlineCode",{parentName:"p"},"Pungi")," project after the ",(0,a.kt)("strong",{parentName:"p"},"4.3.6")," release. Therefore, if you want to take advantage of this feature, make sure to use version higher than ",(0,a.kt)("strong",{parentName:"p"},"4.3.6"),"."))}c.isMDXComponent=!0}}]);