"use strict";(self.webpackChunkosbuild_website_ng=self.webpackChunkosbuild_website_ng||[]).push([[2848],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var o=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,o)}return r}function s(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function a(e,t){if(null==e)return{};var r,o,n=function(e,t){if(null==e)return{};var r,o,n={},i=Object.keys(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(o=0;o<i.length;o++)r=i[o],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=o.createContext({}),c=function(e){var t=o.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):s(s({},t),e)),r},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},d="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},m=o.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,l=e.parentName,p=a(e,["components","mdxType","originalType","parentName"]),d=c(r),m=n,f=d["".concat(l,".").concat(m)]||d[m]||u[m]||i;return r?o.createElement(f,s(s({ref:t},p),{},{components:r})):o.createElement(f,s({ref:t},p))}));function f(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,s=new Array(i);s[0]=m;var a={};for(var l in t)hasOwnProperty.call(t,l)&&(a[l]=t[l]);a.originalType=e,a[d]="string"==typeof e?e:n,s[1]=a;for(var c=2;c<i;c++)s[c]=r[c];return o.createElement.apply(null,s)}return o.createElement.apply(null,r)}m.displayName="MDXCreateElement"},1227:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var o=r(7462),n=(r(7294),r(3905));const i={},s="Developer guide",a={unversionedId:"developer-guide/developer-guide",id:"developer-guide/developer-guide",title:"Developer guide",description:"In this section, you will find a description of the source code in osbuild organization.",source:"@site/docs/developer-guide/developer-guide.md",sourceDirName:"developer-guide",slug:"/developer-guide/",permalink:"/osbuild-website-ng/docs/developer-guide/",draft:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/developer-guide/developer-guide.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"Code style guidelines",permalink:"/osbuild-website-ng/docs/developer-guide/code-style"},next:{title:"Glossary",permalink:"/osbuild-website-ng/docs/developer-guide/glossary"}},l={},c=[],p={toc:c},d="wrapper";function u(e){let{components:t,...i}=e;return(0,n.kt)(d,(0,o.Z)({},p,i,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"developer-guide"},"Developer guide"),(0,n.kt)("p",null,"In this section, you will find a description of the source code in ",(0,n.kt)("inlineCode",{parentName:"p"},"osbuild")," organization."),(0,n.kt)("p",null,"The following scheme describes how separate components communicate with each other:\n",(0,n.kt)("img",{src:r(5029).Z,width:"1248",height:"528"})),(0,n.kt)("p",null,"In the very basic use case where ",(0,n.kt)("inlineCode",{parentName:"p"},"osbuild-composer"),' is running locally, the "pool of workers" also lives on the user\'s host machine. The ',(0,n.kt)("inlineCode",{parentName:"p"},"osbuild-composer")," and ",(0,n.kt)("inlineCode",{parentName:"p"},"osbuild-worker")," processes are spawned by systemd. We don't support any other means of spawning these processes, as they rely on systemd to open sockets, create state directories etc. Additionally, ",(0,n.kt)("inlineCode",{parentName:"p"},"osbuild-worker")," spawns osbuild as a subprocess to create the image itself. The whole image building machinery is spawned from a user process, for example, ",(0,n.kt)("inlineCode",{parentName:"p"},"composer-cli"),"."))}u.isMDXComponent=!0},5029:(e,t,r)=>{r.d(t,{Z:()=>o});const o=r.p+"assets/images/osbuild-composer-71e2d4e4e39e0f62c7b2a09795d33dd4.svg"}}]);